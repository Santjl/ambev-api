version: '3.8'

services:
  api:
    container_name: ambev_developer_evaluation_webapi
    image: ambevdeveloperevaluationwebapi:dev
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8080
      ASPNETCORE_HTTPS_PORTS: 8081
      # Exemplo de connection strings
      ConnectionStrings__Postgres: Host=db;Port=5432;Database=developer_evaluation;Username=developer;Password=ev@luAt10n
      Mongo__ConnectionString: mongodb://developer:ev@luAt10n@mongo:27017
      Redis__ConnectionString: redis:6379,password=ev@luAt10n
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
      mongo:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  db:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    container_name: ambev_developer_evaluation_nosql
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: developer
      MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db

  redis:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: ["redis-server", "--requirepass", "ev@luAt10n"]
    ports:
      - "6379:6379"

volumes:
  pgdata:
  mongodata:
